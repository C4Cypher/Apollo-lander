:- module trail.
:- interface.
:- use_module io.
:- pragma foreign_import_module("C", trail).
:- type choicepoint_id.
:- type untrail_reason
    --->    untrail_undo 
    ;       untrail_exception 
    ;       untrail_retry 
    ;       untrail_commit 
    ;       untrail_solve 
    ;       untrail_gc .
:- func choicepoint_id_to_int(trail.choicepoint_id) = int.
:- pred choicepoint_newer(trail.choicepoint_id, trail.choicepoint_id).
:- mode choicepoint_newer((builtin.in), (builtin.in)) is semidet.
:- impure func current_choicepoint_id = trail.choicepoint_id.
:- impure pred debug_trail(io.output_stream).
:- mode debug_trail((builtin.in)) is det.
:- func null_choicepoint_id = trail.choicepoint_id.
:- pred reason_name(trail.untrail_reason, string).
:- mode reason_name((builtin.in), (builtin.out)) is det.
:- mode reason_name((builtin.out), (builtin.in)) is semidet.
:- impure pred trail_closure((impure (pred trail.untrail_reason))).
:- mode trail_closure(builtin.in((pred((builtin.in)) is det))) is det.
:- pred trail_closure_io(pred(trail.untrail_reason, io.io, io.io), io.io, io.io).
:- mode trail_closure_io(builtin.in((pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- impure pred trail_closure_on_backtrack((impure (pred))).
:- mode trail_closure_on_backtrack(builtin.in(((pred) is det))) is det.
:- pred trail_closure_on_backtrack_io(pred(io.io, io.io), io.io, io.io).
:- mode trail_closure_on_backtrack_io(builtin.in((pred((builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- implementation.
:- pragma foreign_type(c, choicepoint_id, "MR_ChoicepointId", [can_pass_as_mercury_type]).
:- pragma foreign_enum("C", (trail.untrail_reason)/0, [untrail_undo - "MR_undo", untrail_exception - "MR_exception", untrail_retry - "MR_retry", untrail_commit - "MR_commit", untrail_solve - "MR_solve", untrail_gc - "MR_gc"]).
