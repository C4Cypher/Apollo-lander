:- module trail.
:- use_module builtin.
:- use_module exception.
:- use_module io.
:- use_module list.
:- use_module private_builtin.
:- use_module string.
:- use_module (string.format).
:- use_module (string.parse_util).

:- type choicepoint_id.
:- pragma foreign_type(c, choicepoint_id, "MR_ChoicepointId", [can_pass_as_mercury_type]).

:- pragma foreign_import_module("C", array).
:- pragma foreign_import_module("C", bitmap).
:- pragma foreign_import_module("C", io).
:- pragma foreign_import_module("C", stm_builtin).
:- pragma foreign_import_module("C", store).
:- pragma foreign_import_module("C", string).
:- pragma foreign_import_module("C", time).
:- pragma foreign_import_module("C", trail).
:- pragma foreign_import_module("C#", array).
:- pragma foreign_import_module("C#", bitmap).
:- pragma foreign_import_module("C#", io).
:- pragma foreign_import_module("C#", store).
:- pragma foreign_import_module("C#", string).
:- pragma foreign_import_module("Java", array).
:- pragma foreign_import_module("Java", bitmap).
:- pragma foreign_import_module("Java", io).
:- pragma foreign_import_module("Java", store).
:- pragma foreign_import_module("Java", string).
:- pragma foreign_import_module("Erlang", array).
:- pragma foreign_import_module("Erlang", bitmap).
:- pragma foreign_import_module("Erlang", io).
:- pragma foreign_import_module("Erlang", store).

:- pragma foreign_proc("C", trail.choicepoint_id_to_int(CP :: (builtin.in)) = (N :: (builtin.out)), [will_not_call_mercury, thread_safe, not_tabled_for_io, promise_pure, may_modify_trail], "\015\
    N = (MR_Integer) CP;\015\
").

:- pragma foreign_proc("C", trail.choicepoint_newer(A :: (builtin.in), B :: (builtin.in)), [will_not_call_mercury, thread_safe, not_tabled_for_io, promise_pure, may_modify_trail], "\015\
    SUCCESS_INDICATOR = MR_choicepoint_newer(A, B);\015\
").

:- pragma foreign_proc("C", trail.null_choicepoint_id = (Id :: (builtin.out)), [will_not_call_mercury, thread_safe, not_tabled_for_io, promise_pure, may_modify_trail], "\015\
    Id = MR_null_choicepoint_id();\015\
").

:- pragma foreign_proc("C", trail.trail_closure_io(Pred :: builtin.in((pred((builtin.in), (builtin.di), (builtin.uo)) is det)), _IO0 :: (builtin.di), _IO :: (builtin.uo)), [will_not_call_mercury, not_thread_safe, not_tabled_for_io, promise_pure, may_modify_trail], "\015\
    MR_trail_function(ML_call_trail_closure_save_regs, (void *) Pred);\015\
").

:- pragma foreign_proc("C", trail.trail_closure_on_backtrack_io(Pred :: builtin.in((pred((builtin.di), (builtin.uo)) is det)), _IO0 :: (builtin.di), _IO :: (builtin.uo)), [will_not_call_mercury, not_thread_safe, not_tabled_for_io, promise_pure, may_modify_trail], "\015\
    MR_trail_function(ML_call_trail_closure_on_backtrack, (void *) Pred);\015\
").
