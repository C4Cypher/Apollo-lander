/*
** Automatically generated from `luaMR.m'
** by the Mercury compiler,
** version 20.06.1
** configured for x86_64-unknown-cygwin.
** Do not edit.
*/
#ifndef LUAMR_MH
#define LUAMR_MH

#ifdef __cplusplus
extern "C" {
#endif

#ifdef MR_HIGHLEVEL_CODE
#include "mercury.h"
#else
  #ifndef MERCURY_HDR_EXCLUDE_IMP_H
  #include "mercury_imp.h"
  #endif
#endif
#ifdef MR_DEEP_PROFILING
#include "mercury_deep_profiling.h"
#endif

#ifndef LUAMR_DECL_GUARD
#define LUAMR_DECL_GUARD

#include <lua.h>
#include <lauxlib.h>
#include <lualib.h>

#include <mercury_memory.h>

/* Checking for Lua language features introduced with 5.2 */
#if LUA_VERSION_NUM >= 502

#define AFTER_502

#else /*  LUA_VERSION_NUM < 502 */ 

#define BEFORE_502

#endif /* LUA_VERSION_NUM < 502 */ 

#ifdef BEFORE_502
#define LUA_RIDX_MAINTHREAD     1
#define LUA_RIDX_GLOBALS        2
#define LUA_RIDX_LAST           LUA_RIDX_GLOBALS
#endif /* BEFORE_502 */

#define LUA_MR_MODULES "LUA_MR_MODULES"
#define LUA_MR_READY "LUA_MR_READY"

/* metatable values*/
#define LUA_MR_TYPE "__mercury_type"
#define LUA_MR_USERDATA "__mercury_userdata"




void luaMR_init(lua_State *);
int luaMR_ready(lua_State *);


	typedef int * luaMR_Ref;
	
	luaMR_Ref luaMR_newref(lua_State *, int);
	void luaMR_pushref(lua_State *, luaMR_Ref);
	void luaMR_finalizeref(lua_State *, luaMR_Ref);


	size_t luaMR_len(lua_State *, int);


	void luaMR_getregistry(lua_State *, const char *);
	void luaMR_setregistry(lua_State *, const char *);
	int  luaMR_getupvalue(lua_State *, const int);
	void luaMR_setupvalue(lua_State *, const int);


	int luaMR_loader(lua_State *);


	MR_Word * luaMR_new(MR_Word);
	int luaMR_free(lua_State *);


#endif
MR_Integer luaMR_tostring(lua_State *);

#ifdef __cplusplus
}
#endif

#endif /* LUAMR_MH */
